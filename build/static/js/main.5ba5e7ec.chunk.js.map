{"version":3,"sources":["EmployeeData.js","Data.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","cardStyle","width","backgroundColor","color","EmployeeData","props","classes","Card","className","CardContent","Typography","variant","gutterBottom","userName","component","style","date","project","taskId","task1","task2","Data","id","role","task","one","two","App","console","log","Container","fixed","textTransform","map","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAQMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAEdC,OAAQ,CACJC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEfC,MAAO,CACHC,SAAU,IAEdC,IAAK,CACDC,aAAc,IAElBC,UAAU,CACNC,MAAM,IACNR,QAAQ,eACRC,OAAO,OACPQ,gBAAiB,UACjBC,MAAO,UAsCAC,EAjCM,SAACC,GAAW,IAAD,EACtBC,EAAUlB,IACckB,EAAQd,OACtC,OACI,mCAEI,cAACe,EAAA,GAAD,GAAMC,UAAWF,EAAQhB,MAAzB,0BAA0CgB,EAAQN,WAAlD,yBACQ,eAACS,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAAWH,UAAWF,EAAQV,MAAMgB,cAAY,EAApE,SACKP,EAAMQ,WAEX,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKG,UAAU,KAAKC,MAAO,CAACZ,MAAM,iBAAtD,SACCE,EAAMW,OAEP,eAACN,EAAA,EAAD,CAAaC,QAAQ,WAAWH,UAAWF,EAAQR,IAAnD,sBACcO,EAAMY,WAEpB,eAACP,EAAA,EAAD,CAAYC,QAAQ,QAAQG,UAAU,IAAtC,mBACWT,EAAMa,OACb,+BACA,6BAAKb,EAAMc,QACX,6BAAKd,EAAMe,kBAf3B,OC0BGC,EAjEF,CACT,CACIC,GAAG,EACHT,SAAS,eACTU,KAAK,eACLP,KAAK,aACLC,QAAQ,WACRO,KAAK,CACDN,OAAO,QACPO,IAAI,6CACJC,IAAI,oBAGZ,CACIJ,GAAG,EACHT,SAAS,cACTU,KAAK,eACLP,KAAK,aACLC,QAAQ,QACRO,KAAK,CACDN,OAAO,QACPO,IAAI,6CACJC,IAAI,oBAGZ,CACIJ,GAAG,EACHT,SAAS,kBACTU,KAAK,eACLP,KAAK,aACLC,QAAQ,UACRO,KAAK,CACDN,OAAO,SACPO,IAAI,6CACJC,IAAI,oBAGZ,CACIJ,GAAG,EACHT,SAAS,gBACTU,KAAK,eACLP,KAAK,aACLC,QAAQ,YACRO,KAAK,CACDN,OAAO,QACPO,IAAI,6CACJC,IAAI,oBAGZ,CACIJ,GAAG,EACHT,SAAS,mBACTU,KAAK,eACLP,KAAK,aACLC,QAAQ,QACRO,KAAK,CACDN,OAAO,SACPO,IAAI,6CACJC,IAAI,qB,QCzBDC,EA5BL,WACNC,QAAQC,IAAIR,GAiBZ,OACI,mCACI,eAACS,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACA,oBAAIhB,MAAO,CAACiB,cAAc,aAA1B,sCACCX,EAAKY,KApBG,SAACC,GACd,OACI,cAAC,EAAD,CAEArB,SAAUqB,EAAMrB,SAChBU,KAAMW,EAAMX,KACZP,KAAMkB,EAAMlB,KACZC,QAASiB,EAAMjB,QACfC,OAAQgB,EAAMV,KAAKN,OACnBC,MAAOe,EAAMV,KAAKC,IAClBL,MAAOc,EAAMV,KAAKE,KAPbQ,EAAMZ,aCERa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ba5e7ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    cardStyle:{\r\n        width:270,\r\n        display:'inline-block',\r\n        margin:'20px',\r\n        backgroundColor: '#232323',\r\n        color: '#fff',\r\n\r\n    }\r\n});\r\n\r\nconst EmployeeData = (props) => {\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>â€¢</span>;\r\n    return (\r\n        <>\r\n      \r\n            <Card className={classes.root} className={classes.cardStyle}>\r\n                    <CardContent>\r\n                        <Typography variant=\"overline\" className={classes.title}gutterBottom>\r\n                            {props.userName}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\" style={{color:'palevioletred'}}>\r\n                        {props.date}\r\n                        </Typography>\r\n                        <Typography  variant=\"overline\" className={classes.pos}>\r\n                            Project: {props.project}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Task: {props.taskId}\r\n                            <ul>\r\n                            <li>{props.task1}</li>\r\n                            <li>{props.task2}</li>\r\n                            </ul> \r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default EmployeeData;","const Data = [\r\n    {\r\n        id:1,\r\n        userName:\"Nikesh Arora\",\r\n        role:\"ui developer\",\r\n        date:\"01/03/2021\",\r\n        project:\"Softbank\",\r\n        task:{\r\n            taskId:\"JRO07\",\r\n            one:\"Creating a structure, and implementing API\",\r\n            two:\"Module creation\",\r\n        }\r\n    },\r\n    {\r\n        id:2,\r\n        userName:\"Rajeev Suri\",\r\n        role:\"ui developer\",\r\n        date:\"02/03/2021\",\r\n        project:\"Nokia\",\r\n        task:{\r\n            taskId:\"895GM\",\r\n            one:\"Creating a structure, and implementing API\",\r\n            two:\"Module creation\",\r\n        }\r\n    },\r\n    {\r\n        id:3,\r\n        userName:\"Nandan Nilekani\",\r\n        role:\"ui developer\",\r\n        date:\"03/03/2021\",\r\n        project:\"infosys\",\r\n        task:{\r\n            taskId:\"KLOP23\",\r\n            one:\"Creating a structure, and implementing API\",\r\n            two:\"Module creation\",\r\n        }\r\n    },\r\n    {\r\n        id:4,\r\n        userName:\"satya nadella\",\r\n        role:\"ui developer\",\r\n        date:\"04/03/2021\",\r\n        project:\"Microsoft\",\r\n        task:{\r\n            taskId:\"IH9KH\",\r\n            one:\"Creating a structure, and implementing API\",\r\n            two:\"Module creation\",\r\n        }\r\n    },\r\n    {\r\n        id:5,\r\n        userName:\"Shantanu Narayen\",\r\n        role:\"ui developer\",\r\n        date:\"05/03/2021\",\r\n        project:\"Adobe\",\r\n        task:{\r\n            taskId:\"12HW32\",\r\n            one:\"Creating a structure, and implementing API\",\r\n            two:\"Module creation\",\r\n        }\r\n    }\r\n\r\n]\r\n\r\n\r\nexport default Data;","import React from 'react';\nimport EmployeeData from './EmployeeData';\nimport Data from './Data';\nimport Container from '@material-ui/core/Container';\n\nconst App=()=>{\n    console.log(Data);\n    const callfunc = (value)=>{\n        return(\n            <EmployeeData \n            key={value.id} \n            userName={value.userName} \n            role={value.role} \n            date={value.date} \n            project={value.project}\n            taskId={value.task.taskId}   \n            task1={value.task.one}   \n            task2={value.task.two}   \n            />\n        )    \n\n    }\n\n    return(\n        <>\n            <Container fixed>\n            <h1 style={{textTransform:'uppercase'}}>Employee task details:  </h1>\n            {Data.map(callfunc)} \n            </Container>\n        </>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}